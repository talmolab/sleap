{"description": "Template Skeleton for fly32 reference dataset.", "nx_graph": {"directed": true, "graph": {"name": "M:/talmo/data/leap_datasets/BermanFlies/2018-05-03_cluster-sampled.k=10,n=150.labels.mat", "num_edges_inserted": 25}, "links": [{"edge_insert_idx": 0, "key": 0, "source": {"py/object": "sleap.skeleton.Node", "py/state": {"py/tuple": ["head1", 1.0]}}, "target": {"py/object": "sleap.skeleton.Node", "py/state": {"py/tuple": ["eyeL1", 1.0]}}, "type": {"py/reduce": [{"py/type": "sleap.skeleton.EdgeType"}, {"py/tuple": [1]}]}}, {"edge_insert_idx": 1, "key": 0, "source": {"py/id": 1}, "target": {"py/object": "sleap.skeleton.Node", "py/state": {"py/tuple": ["eyeR1", 1.0]}}, "type": {"py/id": 3}}, {"edge_insert_idx": 2, "key": 0, "source": {"py/id": 1}, "target": {"py/object": "sleap.skeleton.Node", "py/state": {"py/tuple": ["neck1", 1.0]}}, "type": {"py/id": 3}}, {"edge_insert_idx": 3, "key": 0, "source": {"py/id": 5}, "target": {"py/object": "sleap.skeleton.Node", "py/state": {"py/tuple": ["thorax1", 1.0]}}, "type": {"py/id": 3}}, {"edge_insert_idx": 23, "key": 0, "source": {"py/id": 5}, "target": {"py/object": "sleap.skeleton.Node", "py/state": {"py/tuple": ["wingL1", 1.0]}}, "type": {"py/id": 3}}, {"edge_insert_idx": 24, "key": 0, "source": {"py/id": 5}, "target": {"py/object": "sleap.skeleton.Node", "py/state": {"py/tuple": ["wingR1", 1.0]}}, "type": {"py/id": 3}}, {"edge_insert_idx": 4, "key": 0, "source": {"py/id": 6}, "target": {"py/object": "sleap.skeleton.Node", "py/state": {"py/tuple": ["abdomen1", 1.0]}}, "type": {"py/id": 3}}, {"edge_insert_idx": 5, "key": 0, "source": {"py/object": "sleap.skeleton.Node", "py/state": {"py/tuple": ["forelegR1", 1.0]}}, "target": {"py/object": "sleap.skeleton.Node", "py/state": {"py/tuple": ["forelegR2", 1.0]}}, "type": {"py/id": 3}}, {"edge_insert_idx": 6, "key": 0, "source": {"py/id": 11}, "target": {"py/object": "sleap.skeleton.Node", "py/state": {"py/tuple": ["forelegR3", 1.0]}}, "type": {"py/id": 3}}, {"edge_insert_idx": 7, "key": 0, "source": {"py/id": 12}, "target": {"py/object": "sleap.skeleton.Node", "py/state": {"py/tuple": ["forelegR4", 1.0]}}, "type": {"py/id": 3}}, {"edge_insert_idx": 8, "key": 0, "source": {"py/object": "sleap.skeleton.Node", "py/state": {"py/tuple": ["midlegR1", 1.0]}}, "target": {"py/object": "sleap.skeleton.Node", "py/state": {"py/tuple": ["midlegR2", 1.0]}}, "type": {"py/id": 3}}, {"edge_insert_idx": 9, "key": 0, "source": {"py/id": 15}, "target": {"py/object": "sleap.skeleton.Node", "py/state": {"py/tuple": ["midlegR3", 1.0]}}, "type": {"py/id": 3}}, {"edge_insert_idx": 10, "key": 0, "source": {"py/id": 16}, "target": {"py/object": "sleap.skeleton.Node", "py/state": {"py/tuple": ["midlegR4", 1.0]}}, "type": {"py/id": 3}}, {"edge_insert_idx": 11, "key": 0, "source": {"py/object": "sleap.skeleton.Node", "py/state": {"py/tuple": ["hindlegR1", 1.0]}}, "target": {"py/object": "sleap.skeleton.Node", "py/state": {"py/tuple": ["hindlegR2", 1.0]}}, "type": {"py/id": 3}}, {"edge_insert_idx": 12, "key": 0, "source": {"py/id": 19}, "target": {"py/object": "sleap.skeleton.Node", "py/state": {"py/tuple": ["hindlegR3", 1.0]}}, "type": {"py/id": 3}}, {"edge_insert_idx": 13, "key": 0, "source": {"py/id": 20}, "target": {"py/object": "sleap.skeleton.Node", "py/state": {"py/tuple": ["hindlegR4", 1.0]}}, "type": {"py/id": 3}}, {"edge_insert_idx": 14, "key": 0, "source": {"py/object": "sleap.skeleton.Node", "py/state": {"py/tuple": ["forelegL1", 1.0]}}, "target": {"py/object": "sleap.skeleton.Node", "py/state": {"py/tuple": ["forelegL2", 1.0]}}, "type": {"py/id": 3}}, {"edge_insert_idx": 15, "key": 0, "source": {"py/id": 23}, "target": {"py/object": "sleap.skeleton.Node", "py/state": {"py/tuple": ["forelegL3", 1.0]}}, "type": {"py/id": 3}}, {"edge_insert_idx": 16, "key": 0, "source": {"py/id": 24}, "target": {"py/object": "sleap.skeleton.Node", "py/state": {"py/tuple": ["forelegL4", 1.0]}}, "type": {"py/id": 3}}, {"edge_insert_idx": 17, "key": 0, "source": {"py/object": "sleap.skeleton.Node", "py/state": {"py/tuple": ["midlegL1", 1.0]}}, "target": {"py/object": "sleap.skeleton.Node", "py/state": {"py/tuple": ["midlegL2", 1.0]}}, "type": {"py/id": 3}}, {"edge_insert_idx": 18, "key": 0, "source": {"py/id": 27}, "target": {"py/object": "sleap.skeleton.Node", "py/state": {"py/tuple": ["midlegL3", 1.0]}}, "type": {"py/id": 3}}, {"edge_insert_idx": 19, "key": 0, "source": {"py/id": 28}, "target": {"py/object": "sleap.skeleton.Node", "py/state": {"py/tuple": ["midlegL4", 1.0]}}, "type": {"py/id": 3}}, {"edge_insert_idx": 20, "key": 0, "source": {"py/object": "sleap.skeleton.Node", "py/state": {"py/tuple": ["hindlegL1", 1.0]}}, "target": {"py/object": "sleap.skeleton.Node", "py/state": {"py/tuple": ["hindlegL2", 1.0]}}, "type": {"py/id": 3}}, {"edge_insert_idx": 21, "key": 0, "source": {"py/id": 31}, "target": {"py/object": "sleap.skeleton.Node", "py/state": {"py/tuple": ["hindlegL3", 1.0]}}, "type": {"py/id": 3}}, {"edge_insert_idx": 22, "key": 0, "source": {"py/id": 32}, "target": {"py/object": "sleap.skeleton.Node", "py/state": {"py/tuple": ["hindlegL4", 1.0]}}, "type": {"py/id": 3}}], "multigraph": true, "nodes": [{"id": {"py/id": 1}}, {"id": {"py/id": 2}}, {"id": {"py/id": 4}}, {"id": {"py/id": 5}}, {"id": {"py/id": 6}}, {"id": {"py/id": 9}}, {"id": {"py/id": 10}}, {"id": {"py/id": 11}}, {"id": {"py/id": 12}}, {"id": {"py/id": 13}}, {"id": {"py/id": 14}}, {"id": {"py/id": 15}}, {"id": {"py/id": 16}}, {"id": {"py/id": 17}}, {"id": {"py/id": 18}}, {"id": {"py/id": 19}}, {"id": {"py/id": 20}}, {"id": {"py/id": 21}}, {"id": {"py/id": 22}}, {"id": {"py/id": 23}}, {"id": {"py/id": 24}}, {"id": {"py/id": 25}}, {"id": {"py/id": 26}}, {"id": {"py/id": 27}}, {"id": {"py/id": 28}}, {"id": {"py/id": 29}}, {"id": {"py/id": 30}}, {"id": {"py/id": 31}}, {"id": {"py/id": 32}}, {"id": {"py/id": 33}}, {"id": {"py/id": 7}}, {"id": {"py/id": 8}}]}, "preview_image": {"py/b64": ""}}