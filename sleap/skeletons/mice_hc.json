{"description": "Template Skeleton for mice_hc reference dataset.", "nx_graph": {"directed": true, "graph": {"name": "Skeleton-0", "num_edges_inserted": 4}, "links": [{"edge_insert_idx": 0, "key": 0, "source": {"py/object": "sleap.skeleton.Node", "py/state": {"py/tuple": ["snout", 1.0]}}, "target": {"py/object": "sleap.skeleton.Node", "py/state": {"py/tuple": ["earL", 1.0]}}, "type": {"py/reduce": [{"py/type": "sleap.skeleton.EdgeType"}, {"py/tuple": [1]}]}}, {"edge_insert_idx": 1, "key": 0, "source": {"py/id": 1}, "target": {"py/object": "sleap.skeleton.Node", "py/state": {"py/tuple": ["earR", 1.0]}}, "type": {"py/id": 3}}, {"edge_insert_idx": 2, "key": 0, "source": {"py/id": 1}, "target": {"py/object": "sleap.skeleton.Node", "py/state": {"py/tuple": ["tb", 1.0]}}, "type": {"py/id": 3}}, {"edge_insert_idx": 3, "key": 0, "source": {"py/id": 5}, "target": {"py/object": "sleap.skeleton.Node", "py/state": {"py/tuple": ["tt", 1.0]}}, "type": {"py/id": 3}}], "multigraph": true, "nodes": [{"id": {"py/id": 1}}, {"id": {"py/id": 2}}, {"id": {"py/id": 4}}, {"id": {"py/id": 5}}, {"id": {"py/id": 6}}]}, "preview_image": {"py/b64": "LzlqLzRBQVFTa1pKUmdBQkFRQUFBUUFCQUFELzJ3QkRBQWdHQmdjR0JRZ0hCd2NKQ1FnS0RCUU5EQXNMREJrU0V3OFVIUm9mSGgwYUhCd2dKQzRuSUNJc0l4d2NLRGNwTERBeE5EUTBIeWM1UFRneVBDNHpOREwvMndCREFRa0pDUXdMREJnTkRSZ3lJUndoTWpJeU1qSXlNakl5TWpJeU1qSXlNakl5TWpJeU1qSXlNakl5TWpJeU1qSXlNakl5TWpJeU1qSXlNakl5TWpJeU1qTC93QUFSQ0FDQUFJQURBU0lBQWhFQkF4RUIvOFFBSHdBQUFRVUJBUUVCQVFFQUFBQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkFBQWdFREF3SUVBd1VGQkFRQUFBRjlBUUlEQUFRUkJSSWhNVUVHRTFGaEJ5SnhGREtCa2FFSUkwS3h3UlZTMGZBa00ySnlnZ2tLRmhjWUdSb2xKaWNvS1NvME5UWTNPRGs2UTBSRlJrZElTVXBUVkZWV1YxaFpXbU5rWldabmFHbHFjM1IxZG5kNGVYcURoSVdHaDRpSmlwS1RsSldXbDVpWm1xS2pwS1dtcDZpcHFyS3p0TFcydDdpNXVzTER4TVhHeDhqSnl0TFQxTlhXMTlqWjJ1SGk0K1RsNXVmbzZlcng4dlAwOWZiMytQbjYvOFFBSHdFQUF3RUJBUUVCQVFFQkFRQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkVBQWdFQ0JBUURCQWNGQkFRQUFRSjNBQUVDQXhFRUJTRXhCaEpCVVFkaGNSTWlNb0VJRkVLUm9iSEJDU016VXZBVlluTFJDaFlrTk9FbDhSY1lHUm9tSnlncEtqVTJOemc1T2tORVJVWkhTRWxLVTFSVlZsZFlXVnBqWkdWbVoyaHBhbk4wZFhaM2VIbDZnb09FaFlhSGlJbUtrcE9VbFphWG1KbWFvcU9rcGFhbnFLbXFzck8wdGJhM3VMbTZ3c1BFeGNiSHlNbkswdFBVMWRiWDJObmE0dVBrNWVibjZPbnE4dlAwOWZiMytQbjYvOW9BREFNQkFBSVJBeEVBUHdEajFWUU1EakZSb2ZMdVNBZnZEZ2U5VGdsdU9LcFRydHVJMzJsbHpnaWdEU0Z4dFZqSkdXWThBQmFrV1F2OHpISGY2VXlHS1IzVlVHTnc0d2VudlNYQmlXL2l0NTVERVc0UG9hQUpWa2toaGVZWUlQQmJHZVBvS2dtbGhoWmxoMm5kMUlIR2FtZFR2WkkyM1Fodmx6a0FVMTNGdzhjWmdpT3puZG52OUtBSDI2dHRXT05GMmpoczhFVXJoYlpRa3pPOHFqSUpHTTFNZFBtMm9VY3crV3dJVWZ4ZldrMjNVdXB4eEZWbFp3RkRZNmMwQUxGcUVtaldrbXBDVGF6UDVNSUF4Z0hHOXZ5T1B4OXFveFQzRE02dHRPSkNFWWRNZHEwN3FDUFVKUkZEdGFHQWJGRG5nZ0hyK0p5YXltVVIzVExJTVFrZGdlb05URmRlNVVuMExDZzI4Z0lERVp4NmdHck1rOENiWkVoRHVQbFpmYzk2aHQ3MlRlOWtJc3hFWjNBWkpKTlNtM2kzckNTMFVvYmNNTjFxaVNxdDQwa2dqaGo4eFIvckY2QmZlcFJlT2twNVJkdUNxajVzL3dDRldidlR2c1hrTjhqbVFoV1lISEh2VmFDeHRGdnBnMHZsRmszcTJlOUFENWJpM1k3Mmgyek1NRmgwSm9aSkliUnJlM1VNRHlRVHlLcXJiK2FmUGdiNVE0MzRPUTJLdGZheERiTnNWREpuRzdQU2dEUHRVa3VaaEdvQWIzT0FQeHFPNUJVc0F5bjBLbklQMHBGWmtZdGdFbm9EVU1yeXU1YmFDZTZLT2ZjMEFXTGZ6dktFc0V6aVF0MzZaK2xYRERJNjdpcWJqOHdKNXdhcVc0alFxTnpFOWRwN1ZiQ3VrWkt5RW5PUi9oUUJLdHhQSmJqWW9PQjh4MjlLcnBBeERQR3Z6RTVZanJUN1NlU0pKWVlRWEpBTWpFZXRMTkc0aFlvN0FZT1ZYcWFBSldtZG9TazhpbVFmTnQ3N1Fhc1cxd2k2ZExjQlhXU1l0RkhoVGtEK0p2eUlING1zNkMzbWVSVWl0OHlURlYrYzhqNm1yZDdPa2s4ZHZibGhDb01hWjZrZjN2eE9UK05UTFYyS1dpdUpiU0xESnVBOHhTZUJqQjk2a0RpY3VIakN4NU93ZDZxczBpdVVabFZFVUhlRDFvZ1FTU1JyRXhmZWVTVDBxaVMrNkpieFJpR1JIbEhJei9XcXM3dmRYY1VxcW9NUnlSNjhldE51dE9LVExJc200RTRLWS9sVmVKRisyQkdsWlJ1M0VEMEhxYUFOV0FSM2N3YTVpZHZMNStVZktmYW1YVHhTTEpiSmFQSER1R0dJd0tmYmxHZGpiVEV4a1pBejFQcm5yVFZlV1J2S21hUlFoM0J5bytZZW1hQU1wNVpGdDVJSVVCamtHRHQ0MjFQWVdnWUxISElHVTRYUCtlOU11MXRwdkxsRE1FM044cUE1em1wSmJvd0lzTnREd3h6eHh0b0FvS1QxTlZyaFRLcFlIREwwTldsR0J6VEh3Z0lZRG52UUE1QTBrS01yYldBSHZtdEtKbGFJRUtTZ1kvTVJpc3ExamN1SXhLRjU2ZTFYcG9wUVBLTGdSanBpZ0N5cE9IZU5sQ3NRSEhlbUs0ZVYxQ0FGZXI5NnJ3UEVrbmxnRU9WeVRqZ21wWk45eHR0SVZ6Sks0VUg2bWpZQzRrNzI5bFBObFJJNThtRTl6L2ZJL0E0L0dxOEVQMmtlZTVSakdEdFQzcHQ3Y3d2TUJDTjBjQTJSQWQ4ZC93QVRrL2pUSVpXQkJJT2M5am5GVEh1eHk3QTlxWkxWOThhNWsrYmEvVlNPbk5JTGhZSTJqUlNac0J4bnQ3Wm9tYTdsYnk0dG9pQXh2YnFmYWt0SS9NYllEempHU1BTcUVhTG1hYUFONWFqUDNXSnFsT1pvWGpuUlZ3U1FSL09sbXZKb3lJVnlzY2JaS2tmZStsVHBPa2tCa0xBZVljS0hHTWUxQUVFRnRJOGZuTEx0Qk9CN0QwclJoM2VVUkt4Qnh0d0J1L0hOUnd4bjdONU81ZHVEODJNVlhtbGtoc2NReEVyRXZPRDF3YUFFaUVzZDR5cktnUUFsZ3k5YWRBcU9zNkkwWWJQOTNrLy9BRnFycGRxWGp1TmhNZUFHWEhTcmNGekQ1N3lHSnZMQXd2Y24xeUtBTVVOdVg1ZUtqYUhjd1l1ZUtWZUY1Qk5QK1Z2dWcwQU4zZVRNaktNNXFiekhrZm1URzRrZ0E1eFZhWU1WeDBOUzJ6aUlNa285TnB6UUJQTE94U0ZQS0NqQjU5NjFFczVvZElrMUVBYm5QMmVNN2g4cEkrWTQrbkg0MWpDVkhkQ3FuQkhHZTM0VnVXNFY0akcvM1g3K2g3R29xWDVmNjJMaFp1eHprc1UwVFpqKzZPb0ZTd1haYVRhUGxiZ1lQZXIxeEFWWWdqREE0SXJMdTdmZ3VnTzRjNEI2MWExSU5GbjJSK1ZLNFBPU0Fha3M0bWozM0N2dHdDRjNjNEZaRnRjaDl6dkdHWS9LQ1RrMW9DN01rYXd1b0Mvb2NVQVczODJmWkRPaUJsQmNPdmM5c1VnRGlNbDg3VzdnOTZidTNxMjVpeXQyOUI3VXNEdWJQN01SeUFRcFBVMEFUV3JrUkFPZDVDN2h6MnFPU1VLTGlPNGpZUWNNU2dKNjlzMHR2YlNSTTB4WHpDb3gvalUwa3N6cWJmeURzY2h1UjEvd29BcjNLMjF0cGtCc1FYM3RrRDA5YW1SNFBMa1F4eUdRZk1YWG9mYW5xSVl3RWtVSVEzK3I2akZLMXNrMm9CNFpXVUFCZkw2REo5YUFNTU9EbkF5RHpVTHlLcHdyNGIzcVMzVWVRQ0R5RzJtaVNCR080Z0U5cUFHU01WSHpjL1NrZ0cvQmJrZ25BcDZrRE9SbW16Uk1Rcng4SHJ4UUJkWlVNa1pVZTFiRUtaakdhd2JVWU1iWjRKNUdPaHJwNGxYWUQ3VUFWN3FMeklSSi9FUGxiK2hySmxpeDByZmJhRHo5d2pERDJyUHVJTmpsZjhtczQrNitUN3Y2OHZ5TkplOHViNy82OHpuWjRQTGN0R295M1g2MVlqVjJVYmtWVkNrSG5vS251RTVJcW5ibGhPV0RjbmpESDByUXpMY01YbHhxc1M3STg5ejA1NjFjM2haVlJtM012S1lIV3EwTHlpZFJsV1hQSVBldE9lTlpvd3lLdVBRMEFFYjVVYlQ1WVppZG1PZnBVcWlab01zdzg4OUQxNHF1d3hFSFVaYjdyWTVJL0duMms1eEpHVVpuVG93Nk1QYWdCSGVSSlR0S2d0d3g2Zy9wU3UwcnlTUmIyTGhRU3lnWTYwMnlqUzVobVoyMjRiK0gvR3BaTGtwREhiUnhsbEorK08zdFFCekZpSFpWWWNoOC9tT3RYdmxBR1NCbXN5Mm5NTnMrMGdOQTI5YzkvYitkWDFDM2NFY2dPRkl6eFFBa2lubkZJcFZJaXhiR0tsZmdIRlE3TW9WUE9hQUdRdUhZbEpjNFAzUlc1WTNwWkFqSGtWaFEyc1Z1MlN4d2VDUnhWdUE3RHVVbmFEZ1o5S0FPbEh6cFVNaTc0VC9lVDlWLyt0VExlYk1mV25saXJoeHpqdDZpb21tMWRib3VEU2Ruc3pKdVY0eldVRjIzd0xFYkJ6aXQrOGdDTnh5amNxZmFzSzZBaHVFa0s3Z09NVlVXcEs2SmttblpsaHBWeWRyaFN3NEI2Vk5GZXc1THFaQkZHcHlXNEdmeHJPajJ5U3YrN0JrNmdWcEFKSkdFblVoMkdNTmpDMHhEaEtMY2tTRWtNUE1VamtFK2xYSVBKbWJ6TUZYSTVYKzdWQmlpU3VTdTRvbzJnamlyVFlVTnRZckk0QjZkRDZab0FrMk5hczRXNEFTWFBHTWJUNmlrdFh5MldKYmpidEhSbXoxcVJveTFwSDVVdTUvNDR6am4xcXM1RnZhTEk4aWphd0I5UlFCemRzRmE0Q09jTEt1MDU5YXQ2UTVFRWtESG1KeVB3cXJlVzhsbGRTUXVDSGdrN2p0U1F6R0hVZDZmZG5UUFBxS0FObDE3MUNCaHlhbVZpOElKR0NSMHFHUnRvUEdlT2xBQ3p3czZjQ25Rb3NWbWtoazNFbkd3VlZ0bW5jdjVtUU8yUlUxcVcrMGJCdHdleG9BdTI4N0tjSGowclVXUU9vck1VQ1VLRlhBWHZtblFUNEpYUFNnRFNaZk9oTVhWbHl5ZjFGWVY5R0hCOWUxYlNxeEt1cElJNUJxcmYydVpCS3YzWk9nSFk5eFVKV25iditmL0FBZjh5MjA0WDdmbC93QUQvSXc3VXgrZHZPRWRPY210Q0s1aXVvcEpBbStWQmdIR01WUWxWSXIwZktTNUhBN1ZvV3JzQ2lEQkwvZUI3VlpCSGJScmNURVNMakhWbGJ2VmlBN251QzhwWUU0R1JrQTFJOXNZaG56Y1pZQUVMejlLaWpqSDJ1S1BJTEU0Ym5xYUFIVHprWFNLWW5remdFcU9BVFZsZkx0NVhqTUt5UnVNWkl6ays5TnVJSGluV05oOXo1aXhPZVQwR0tsU1ZZa0pZcXhZNEtEbjhLQU1MVzVXdkwwWGJuSm5qR1Q2NEdLelVJYzJ1UmdJeEJJOWEzQmJ3WEhoZnp6SUJjd1RCZHZxaDYva2NWaDQyU01CMCs4S0FOcmRsZU9sTkNndG1tcEtqSmxSZ0VkUFNwWXdEa2svU2dCU29JR0RWYVhNY3dZTDdHcDk2dVRzeG51S1NaTXI5YUFMWWNSdzVSTWNmTWFhemlXQkZSUXB4dU1tM2tlMktmYXUwdys2TTdja04zcTFhdEd1M0RxV0hEOGRLQUpkSjJUckxISmN4eHlLQjVTUHg1aHowQjZDcHBZYzc3ZHdWWW5nTnh0YnQvaFZHV0Zra2JFWG1KSTMrc0J4dHBZdFNKVklMMUhraTZKS3Yzay94SHNmMHBTaXBLMnpIRjhydnVZbW9SbFp0d3dIWDE3Q21RbTVjTnRrakRCY2h1bURXeHJHbmh4SGV4c0pVY0ZHZE9oUHY2SDJQZXFFRnZHUUZsWERFZFBRWnA4M05xTGw1ZEMyUkxLcXRLUjhvN2RNK3RSUUdTU0NSazRjdDhoVmVWUHVhbGEyTm9xUnd5SHl5Y3R2T1NUVHJlN1h5NUVLRkR3UjlhQUxDTzBsdklXU1FTeDR5WkI5N2oxNzFGYU9ZYlV2Y0JUSUFXM0FWZUxGMGdWR1E1T1h6MVB0Vks5OHkyZ3VIS0pzVEpBUFFpZ0QvOWs9"}}