# Continuous integration using conda installation
name: CI

on:
  pull_request:
    types: [opened, reopened, synchronize]
    paths:
      - "sleap/**"
      - "tests/**"
      - ".github/workflows/ci.yml"
      - "environment_no_cuda.yml"
      - "requirements.txt"
      - "dev_requirements.txt"
  # push:
  #   branches:
  #     - main
  #     - develop
  #   paths:
  #     - "sleap/**"
  #     - "tests/**"
  #     - ".github/workflows/ci.yml"
  #     - "environment_no_cuda.yml"
  #     - "requirements.txt"
  #     - "dev_requirements.txt"

jobs:
  # Lint
  lint:
    name: Lint
    runs-on: "ubuntu-22.04"
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Set up Python 3.7
        uses: actions/setup-python@v5
        with:
          python-version: 3.7
      - name: Install Dependencies
        run: |
          pip install click==8.0.4
          pip install black==21.6b0
      - name: Run Black
        run: |
          black --check sleap tests

  # Tests
  tests:
    name: Tests (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-22.04", "windows-2022", "macos-14"]
        include:
          # Default values
          - env_file: environment_no_cuda.yml
          # Mac specific values
          - os: macos-14
            env_file: environment_mac.yml

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Conda
        uses: conda-incubator/setup-miniconda@v3.0.3
        with:
          miniforge-version: latest
          conda-solver: "libmamba"
          environment-file: ${{ matrix.env_file }}
          activate-environment: sleap_ci
      
      # Print environment info
      - name: Print environment info
        shell: bash -l {0}
        run: |
          which python
          conda info
          conda list
          pip freeze
      
      # Test environment
      - name: Test with pytest
        shell: bash -l {0}
        run: |
          pytest --cov=sleap --cov-report=xml --durations=-1 tests/

      # Upload coverage
      - name: Upload coverage
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          verbose: false
